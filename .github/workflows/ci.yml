name: CI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - 'main'
    schedule:
      - cron: '30 5 * * *'

defaults:
  run:
    shell: bash

permissions:
  contents: read

env:
  CARGO_TERM_COLOR: always

jobs:
  ci:
    runs-on: ubuntu-latest
    permissions:
      contents: none
    needs:
      - check
      - clippy
      - deny
      - dco
      - docs
      - outdated
      - rustfmt
      - test
      - typos
    steps:
      - run: exit 0

  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - run: make check

  deny:
    runs-on: ubuntu-latest
    needs: check
    strategy:
      matrix:
        checks:
          - bans licenses sources
          - advisories
    continue-on-error: ${{ matrix.checks == 'advisories' }}
    steps:
    - uses: actions/checkout@v4
    - uses: EmbarkStudios/cargo-deny-action@v1
      with:
        command: check ${{ matrix.checks }}
        command-arguments: -c .deny.toml
        rust-version: stable

  test:
    name: test (${{ matrix.target.os }} - ${{ matrix.target.toolchain }})
    needs: check
    strategy:
      matrix:
        target:
          - { os: ubuntu-latest, toolchain: stable, triple: x86_64-unknown-linux-gnu }
          - { os: ubuntu-latest, toolchain: 1.80.0, triple: x86_64-unknown-linux-gnu }
          - { os: ubuntu-latest, toolchain: beta, triple: x86_64-unknown-linux-gnu }
          - { os: ubuntu-latest, toolchain: nightly, triple: x86_64-unknown-linux-gnu }
          - { os: macos-latest, toolchain: stable, triple: x86_64-apple-darwin }
    runs-on: ${{ matrix.target.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.target.toolchain }}
          targets: ${{ matrix.target.triple }}
      - uses: Swatinem/rust-cache@v2
      - uses: taiki-e/install-action@v2
        with:
          tool: nextest
      - run: make test

  clippy:
    runs-on: ubuntu-latest
    needs: check
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - run: make clippy

  outdated:
    continue-on-error: ${{ github.ref != 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: check
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: dtolnay/install@cargo-outdated
      - uses: Swatinem/rust-cache@v2
      - run: cargo update
      - run: cargo outdated --workspace --exit-code 1

  rustfmt:
    runs-on: ubuntu-latest
    needs: check
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
      - uses: Swatinem/rust-cache@v2
      - run: make check-fmt

  dco:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: check
    steps:
      - uses: actions/checkout@v4
      - run: scripts/check-dco.sh

  docs:
    runs-on: ubuntu-latest
    needs: check
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
      - uses: Swatinem/rust-cache@v2
      - run: make docs

  typos:
    runs-on: ubuntu-latest
    needs: check
    steps:
      - uses: actions/checkout@v4
      - uses: crate-ci/typos@master
        with:
          files: .
